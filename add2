// Базовый класс Expression
class Expression {
public:
    virtual ~Expression() = default;
    Expression() = default;

    // Указываем копирование и перемещение
    Expression(const Expression&) = delete;            // Запрещаем копирование
    Expression& operator=(const Expression&) = delete; // Запрещаем присваивание
    Expression(Expression&&) = default;                // Разрешаем перемещение
    Expression& operator=(Expression&&) = default;     // Разрешаем перемещение

    virtual double eval() const = 0;
    void add_operand(std::shared_ptr<Expression> operand) {
        operands.push_back(operand);
    }

protected:
    std::vector<std::shared_ptr<Expression>> operands;
};

#include <mpi.h>
#include <stdio.h>

int main(int argc, char** argv) {
    int rank, size;
    MPI_Init(&argc, &argv);
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);
    MPI_Comm_size(MPI_COMM_WORLD, &size);

    char message_1kb[1024];     // Сообщение размером 1 KB
    char message_1mb[1024 * 1024]; // Сообщение размером 1 MB

    // Заполнение сообщения на процессе 0
    if (rank == 0) {
        for (int i = 0; i < sizeof(message_1kb); i++) {
            message_1kb[i] = 'A';
        }
        for (int i = 0; i < sizeof(message_1mb); i++) {
            message_1mb[i] = 'B';
        }
    }

    // Измерение времени выполнения на процессе 0
    double start_time, end_time;
    if (rank == 0) {
        start_time = MPI_Wtime();
    }

    // Трансляционная передача сообщения размером 1 KB
    MPI_Bcast(message_1kb, 1024, MPI_CHAR, 0, MPI_COMM_WORLD);

    // Трансляционная передача сообщения размером 1 MB
    MPI_Bcast(message_1mb, 1024 * 1024, MPI_CHAR, 0, MPI_COMM_WORLD);

    // Измерение времени выполнения
    if (rank == 0) {
        end_time = MPI_Wtime();
        printf("Broadcast total time: %f seconds\n", end_time - start_time);
    }

    MPI_Finalize();
    return 0;
}


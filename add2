#include <mpi.h>
#include <stdio.h>
#include <stdlib.h>

#define MB (1024 * 1024)   // Определяем размер 1 МБ
#define KB 1024            // Определяем размер 1 КБ
#define BYTE 1             // Определяем размер 1 байт

int main(int argc, char *argv[]) {
    int rank, size;
    char *message;

    // Инициализация MPI
    MPI_Init(&argc, &argv);
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);  // Получаем ранг текущего процесса
    MPI_Comm_size(MPI_COMM_WORLD, &size);  // Получаем количество процессов

    // Выделение памяти под сообщение (1 МБ)
    message = (char *)malloc(MB * sizeof(char));

    // Инициализация сообщения в процессе 0 (например, заполняем нулями)
    if (rank == 0) {
        for (int i = 0; i < MB; i++) {
            message[i] = 0;
        }
    }

    // Переменная для измерения времени
    double start_time, end_time;

    // Начало трансляционной передачи
    start_time = MPI_Wtime();

    // Передача сообщения от процесса 0 всем остальным процессам
    MPI_Bcast(message, MB, MPI_CHAR, 0, MPI_COMM_WORLD);

    // Конец трансляционной передачи
    end_time = MPI_Wtime();

    // Вывод времени выполнения на процессе 0
    if (rank == 0) {
        printf("Время выполнения трансляции: %f секунд\n", end_time - start_time);
    }

    // Освобождаем память
    free(message);

    // Завершение работы MPI
    MPI_Finalize();

    return 0;
}

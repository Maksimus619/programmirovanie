// Board.hpp
#ifndef BOARD_HPP
#define BOARD_HPP

#include <iostream>
#include <vector>
#include <utility>

class Cell {
public:
    bool is_opened_;
    bool has_flag_;
    bool has_mine_;
    size_t mines_count_;

    Cell() : is_opened_(false), has_flag_(false), has_mine_(false), mines_count_(0) {}
};

class Board {
public:
    Board(size_t rows, size_t cols, const std::vector<std::pair<int, int>>& mines_coords);
    void open(int row, int col);
    void flag(int row, int col);
    void print(std::ostream& output_stream);
    bool is_winner();

private:
    size_t rows_, cols_;
    std::vector<std::vector<Cell>> grid_;
    void reveal_adjacent_cells(int row, int col);
    void set_mines(const std::vector<std::pair<int, int>>& mines_coords);
    int count_mines_around(int row, int col);
};

#endif // BOARD_HPP

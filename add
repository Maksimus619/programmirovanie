#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

// Функция, которая преобразует символ в код Soundex
char getSoundexCode(char letter) {
    letter = tolower(letter);
    std::vector<std::pair<char, int>> mapping = {
        {'b', 1}, {'f', 1}, {'p', 1}, {'v', 1},
        {'c', 2}, {'g', 2}, {'j', 2}, {'k', 2}, {'q', 2}, {'s', 2}, {'x', 2}, {'z', 2},
        {'d', 3}, {'t', 3},
        {'l', 4},
        {'m', 5}, {'n', 5},
        {'r', 6}
    };

    for (const auto& pair : mapping) {
        if (pair.first == letter) {
            return '0' + pair.second;  // Преобразуем число в символ
        }
    }
    return '0';  // Если буква не имеет соответствующего кода
}

std::string soundex(const std::string& name) {
    if (name.empty()) return "0000";

    // Результат начинается с первой заглавной буквы
    std::string result(1, toupper(name[0]));

    char lastCode = getSoundexCode(name[0]);

    // Проходим по символам начиная со второго
    for (size_t i = 1; i < name.size(); ++i) {
        char currentCode = getSoundexCode(name[i]);
        if (currentCode != '0' && currentCode != lastCode) {  // Пропускаем повторяющиеся коды и символы, не имеющие кода
            result += currentCode;
            lastCode = currentCode;
        }
        if (result.size() == 4) break;  // Ограничиваем длину результата до 4 символов
    }

    // Дополняем результат нулями, если длина меньше 4
    while (result.size() < 4) {
        result += '0';
    }

    return result;
}

int main() {
    std::string name;
    std::cin >> name;
    std::cout << soundex(name) << "\n";
    return 0;
}
